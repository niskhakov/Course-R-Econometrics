install.packages("devtools")
source('C:/Users/User/Desktop/Desktop/install_all.R', echo=TRUE)
5+6
factorial(10)
b <- 11
d = 99
5 -> a
a + b
A = 55
a+A
my_number <- 12
my_number
factorial(11)
y <- c(3,-2,5,6,NA,9)
y
y+2
y
0/0
t <- 0/0
1/0
1/Inf
atan(Inf)
pi/2
z <- 100:200
z
coss(pi)
cos(pi)
cos(pi
)
x <- c(23, 15, 46, NA)
z <- (5, 6, NA, 8)
z <- (5, 6, NA, 8)
z <- c(5, 6, NA, 8)
mean(x)
mean(x, na.rm=TRUE)
sum(x, na.rm = TRUE)
d <- data.fram(rost=x, ves=z)
d <- data.frame(rost=x, ves=z)
d
d[4,1]
d[3,1]
d[2,]
d[,2]
d$rost
my_list <- list(a=7, b=10:20, table=d)
my_list$a
my_list$b
my_list$table
library("dplyr")
library("ggplot2")
library(("GGally"))
library("GGAlly")
library("GGally")
library("psych")
help("predict")
help("describe")
help(lm)
library("psych")
library("dplyr")
library("ggplot2")
library("GGally")
d <- cars
glimpse(d)
help(cars)
head(d)
tail(d)
describe(d)
ncol(d)
nrow(d)
str(d)
mean(d$speed)
d2 <- mutate(d, speed=1.67*speed, dist=0.3*dist, ratio=dist/speed)
d2
glimpse(d2)
qplot(data=d2, dist)
qplot(data=d2, xlab="Длина тормозного пути (м)",
ylab = "Кол-во машин",
main = "Данные 1920х годов")
qplot(data=d2, dist, xlab="Длина тормозного пути (м)",
ylab = "Кол-во машин",
main = "Данные 1920х годов")
qplot(data=d2,speed, dist)
model <- lm(data=d2, dist~speed)
model
beta_hat = coef(model)
beta_hat
eps_hat= residuals(model)
eps_hat
y <- d2$dist
y_hat <- fitted(model)
y_hat
RSS <- deviance(model)
RSS
TSS <- sum((y-mean(y))^2)
TSS
ESS <- TSS-ESS
ESS <- TSS-RSS
ESS
R2 <- ESS/TSS
R2<-cor(y,y_hat)^2
R2
x <- model.matrix(model)
x
nd <- data.frame(speed=c(40,60))
nd
predict(model, nd)
qplot(data=d2,speed, dist) + stat_smooth(method="lm")
t <- swiss
help(swiss)
glimpse(t)
describe(t)
ggpairs(t)
model2 <- lm(ata=t, Fertility~Agriculture+education+Catholic)
model2 <- lm(data=t, Fertility~Agriculture+education+Catholic)
model2 <- lm(data=t, Fertility~Agriculture+Education+Catholic)
coef(model2)
fitted(model2)
residuals(model2)
deviance(model2)
report <- summary(model2)
report
report$r.squared
cor(t$Fertility, fitted(model2))
cor(t$Fertility, fitted(model2))^2
nd2 <- data.frame(Agriculture=0.5, Catholic=0.5, Education=20)
predict(model2, nd2)
sum(c(2*0.2, 4*0.2))
6/20
12/20
80/100
0.3*130
data("sleep")
glimpse(sleep)
sleep[7]
sleep[1,1]
sleep[7,1]
sleep[,1]
mean(sleep[,1])
mean(sleep[,1])^3
describe(sleep)
sleep[10:20,1]
deviance(sleep[10:20,1])
deviance(sleep[10:20,1])
mean(sleep[10:20,1])
nd = sleep[10:20,1]
deviance(nd)
describe(nd)
var(nd)
1.9^2
data(mtcars)
glimpse(mtcars)
ca = mtcars
model3 <- lm(data=ca, mpg~cyl+hp+wt+am)
deviance(model3)
summary(model3)
model4 <- lm(data=ca, mpg~disp+hp+wt+am)
summary(model4)
-3.05
model4 <- lm(data=ca, mpg~disp+hp+wt+am)
summary(model4)
model4 <- lm(data=ca, mpg~cyl+hp+wt+am)
summary(model4)
model4 <- lm(data=ca, mpg~disp+cyl+wt+am)
summary(model4)
model4 <- lm(data=ca, mpg~disp+hp+cyl+am)
summary(model4)
# lab 2
library("memisc")
library("dplyr")
library("psych")
library("lmtest")
library("sjPlot")
library("sgof")
library("ggplot2")
library("foreign")
library("car")
library("hexbin")
# Задача 1: генерирование случайных величин
# z_1, ... z_100 ~ N(5,9)
z <- rnorm(100, mean = 5, sd = 9)
z[56]
z[2:9]
qplot(z)
# Задача 2: построение функции плотности
x <- seq(-10, 15,by=0.5)
y <- dnorm(x, mean=5, sd=3)
qplot(x, y)
qplot(x,y,geom="line")
# Задача 3: P(z<3)
# P(z<3)=F(3)
pnorm(3,mean=5, sd=3)
# P(x \in [4; 9])
pnorm(9, mean=5,sd=3) - pnorm(4, mean=5, sd=3)
# P(z<a)=0.7 a ? - нахождение квантиля
qnorm(0.7, mean=5, sd=3)
# Множественная регрессия
h <- swiss
glimpse(h)
help(swiss)
model <- lm(data=h, Fertility~Catholic+Agriculture+Examination)
summary(model)
coeftest(model)
confint(model)
spj.lm(model)
sjp.lm(model)
sjp.lm(model)
sjp.lm(model)
library("sjPlot")
sjp.lm(model)
sjP.lm(model)
sjp.lm(model)
install.packages("sjPlot")
source('~/Courses/Econometrics/Week2/1-lab.R', encoding = 'UTF-8', echo=TRUE)
# Множественная регрессия
h <- swiss
help(swiss)
summary(model)
confint(model) # Доверительный интервал
sjp.lm(model)
sjp
library("sjPlot")
library("sjplot")
library("sjPlot")
sjp.lm(model)
# Проверка линейной гипотезы
# Проверка гипотезы b_Cath = b_agri
model_aux <- lm(data=g, Fertility~Catholic+I(Catholic+Agriculture)+Examination)
# Проверка линейной гипотезы
# Проверка гипотезы b_Cath = b_agri
model_aux <- lm(data=h, Fertility~Catholic+I(Catholic+Agriculture)+Examination)
summary(model_aux)
linearHypothesis(model, "Catholic+Agriculture=0")
linearHypothesis(model, "Catholic-Agriculture=0")
# Стандартизированные коэффициенты, оценка силы влияния -существенность
h_st <- mutate_each(h, "scale")
glimpse(h_st)
model_st = lm(data=h_st,
Fertility~Catholic+Agriculture+Examination)
summary(model_st)
plot_model(model_st)
# Искусственный эксперимент
D <- matrix(nrow=100, rnorm(100*41, mean=0, sd=1))
df <- data.frame(D)
glimpse(D)
glimpse(df)
model_pusto <- lm(data=df, x1~.) # . - все регрессоры
model_pusto <- lm(data=df, x1~. ) # . - все регрессоры
glimpse(df)
model_pusto <- lm(data=df, x1~x2 ) # . - все регрессоры
df
model_pusto <- lm(data=df, x1~. )
model_pusto <- lm(data=df, X1~. )
summary(model_pusto)
# Сравнить несколько моделей
model_2 <- lm(data=h, Fertility~Catholic+Agriculture)
compar_12 <- mtable(model, model_2)
compar_12
setwd("~/Courses/Econometrics/Week2")
# Сохранение результатов работы
stuff <- list(data=h, model=model2)
View(stuff)
saveRDS(file = "mydata.RDS", stuff)
mylist
# Загрузка данных
mylist <- readRDS("mydata.RDS")
summary(mylist$model)
# csv - comma separated values
t <- read.csv("flats_moscow.txt")
glimpse(t)
t <- read.csv("flats_moscow.txt", ssep = "\t", dec=".", header=TRUE)
t <- read.csv("flats_moscow.txt", sep = "\t", dec=".", header=TRUE)
glimpse(t)
model_3 <- lm(data=t, price~totsp+brick)
summary(model_3)
library("memisc")
library("dplyr")
library("psych")
library("lmtest")
library("sjPlot")
library("sgof")
library("ggplot2")
library("foreign")
library("car")
library("hexbin")
library("devtools")
library("rlms")
setwd("~/Courses/Econometrics/Week2")
h <- read.rlms("21wave.sav")
saveRDS(h, "21wave.RDS")
h2 <- select(h, qm1, qm2, qh6,qh5)
describe(h2)
h3 <- rename(h2, ves=qm1, rost=qm2, sex=qh5, b_year=qh6)
h3 <- mutate(h3, vozrast = 2019-b_year)
describe(h3)
summary(h3$sex)
glimpse(h3$sex)
h4 <- filter(h3, sex=="МУЖСКОЙ")
h4 <- filter(h3, sex=="<U+041F><U+043E><U+043B> <U+0440><U+0435><U+0441><U+043F><U+043E><U+043D><U+0434><U+0435><U+043D><U+0442><U+0430>")
h4 <- filter(h3, sex=="<U+041F><U+043E><U+043B> <U+0440><U+0435><U+0441><U+043F><U+043E><U+043D><U+0434><U+0435><U+043D><U+0442><U+0430>")
h4 <- filter(h3, sex==1)
qplot(data = h4, rest, ves)
qplot(data = h4, rost, ves)
qplot(data = h4, ves)
